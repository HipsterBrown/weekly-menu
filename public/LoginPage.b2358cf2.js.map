{"mappings":"6YAAA,IAAAA,EAAAC,EAAA,S,2FAaA,MAAMC,EAAcC,EAAAC,OAAW,CAC7BC,SAAUF,EAAAG,SAAaC,WACvBC,SAAUL,EAAAG,SAAaC,a,IAqDzBE,EAlD4B,KAC1B,MAAMC,GAAW,EAAAC,EAAAC,gBACXC,QAAEA,EAAOC,QAAEA,EAAOC,MAAEA,IAAU,EAAAC,EAAAC,cAUpC,OAJA,EAAAC,EAAAC,YAAU,KACJN,GAASO,MAAMV,EAAS,IAAI,GAC/B,CAACG,GAASO,QAGX,EAAApB,EAAAqB,MAACC,EAAAC,WAAU,CAACC,SAAS,IAAIC,SAAS,QAAQC,GAAG,OAAOC,EAAE,I,WACpD,EAAA3B,EAAA4B,KAACN,EAAAO,QAAO,C,SAAC,UACRhB,GAASO,MACR,EAAApB,EAAAqB,MAAArB,EAAA8B,SAAA,C,WACE,EAAA9B,EAAAqB,MAACC,EAAAS,KAAI,CAACC,GAAG,I,UAAI,WAASnB,EAAQO,SAC9B,EAAApB,EAAA4B,KAACN,EAAAS,KAAI,CAACC,GAAG,I,SAAI,+BAGf,EAAAhC,EAAA4B,KAACK,EAAAC,OAAM,CACLC,cAAe,CAAE9B,SAAU,GAAIG,SAAU,IACzC4B,iBAAkBlC,EAClBmC,gBAAgB,EAChBC,kBAAkB,EAClBC,SAtBeC,OAAOnC,SAAEA,EAAQG,SAAEA,YAClCO,EAAMV,EAAUG,EAAS,E,UAuBzB,EAAAR,EAAA4B,KAACK,EAAAQ,KAAI,C,UACH,EAAAzC,EAAAqB,MAACC,EAAAC,WAAU,CAACC,SAAS,I,WACnB,EAAAxB,EAAA4B,KAACc,EAAAC,QAAU,CAACvB,KAAK,WAAWwB,MAAM,cAClC,EAAA5C,EAAA4B,KAACc,EAAAC,QAAU,CAACvB,KAAK,WAAWwB,MAAM,WAAWC,KAAK,cAClD,EAAA7C,EAAA4B,KAACN,EAAAwB,OAAM,CACLD,KAAK,SACLE,YAAY,OACZC,MAAM,OACNvB,SAAU,CAAC,KAAM,SACjBwB,WAAYnC,EACZoC,UAAWpC,E,SACZ,kBAOE,C","sources":["src/components/LoginPage.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Button, Heading, SimpleGrid, Text } from \"@chakra-ui/react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useNavigate } from \"react-router\";\nimport { useSession } from \"../db\";\nimport InputGroup from \"./InputGroup\";\n\ntype LoginValues = {\n  username: string;\n  password: string;\n};\n\nconst LoginSchema = Yup.object({\n  username: Yup.string().required(),\n  password: Yup.string().required(),\n});\n\nconst LoginPage: React.FC = () => {\n  const navigate = useNavigate();\n  const { session, loading, login } = useSession();\n\n  const loginAndGoHome = async ({ username, password }: LoginValues) => {\n    await login(username, password);\n  };\n\n  useEffect(() => {\n    if (session?.name) navigate(\"/\");\n  }, [session?.name]);\n\n  return (\n    <SimpleGrid spacingY=\"3\" maxWidth=\"600px\" mx=\"auto\" p=\"3\">\n      <Heading>Login</Heading>\n      {session?.name ? (\n        <>\n          <Text as=\"p\">Welcome {session.name}</Text>\n          <Text as=\"p\">Redirecting to home...</Text>\n        </>\n      ) : (\n        <Formik<LoginValues>\n          initialValues={{ username: \"\", password: \"\" }}\n          validationSchema={LoginSchema}\n          validateOnBlur={false}\n          validateOnChange={false}\n          onSubmit={loginAndGoHome}\n        >\n          <Form>\n            <SimpleGrid spacingY=\"3\">\n              <InputGroup name=\"username\" label=\"Username\" />\n              <InputGroup name=\"password\" label=\"Password\" type=\"password\" />\n              <Button\n                type=\"submit\"\n                colorScheme=\"pink\"\n                width=\"100%\"\n                maxWidth={[null, \"10rem\"]}\n                isDisabled={loading}\n                isLoading={loading}\n              >\n                Save\n              </Button>\n            </SimpleGrid>\n          </Form>\n        </Formik>\n      )}\n    </SimpleGrid>\n  );\n};\n\nexport default LoginPage;\n"],"names":["$k4ank","parcelRequire","$4ca131af693bfbf1$var$LoginSchema","$aNkVi","object","username","string","required","password","$4ca131af693bfbf1$export$2e2bcd8739ae039","navigate","$aR93f","useNavigate","session","loading","login","$fiQoM","useSession","$8T3gX","useEffect","name","jsxs","$37woU","SimpleGrid","spacingY","maxWidth","mx","p","jsx","Heading","Fragment","Text","as","$g2LMr","Formik","initialValues","validationSchema","validateOnBlur","validateOnChange","onSubmit","async","Form","$1xLD5","default","label","type","Button","colorScheme","width","isDisabled","isLoading"],"version":3,"file":"LoginPage.b2358cf2.js.map"}