{"mappings":"odAAA,IAAAA,EAAAC,EAAA,S,6FAcA,MAAMC,EAAmB,CACvBC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,GAAI,GACJC,EAAG,GACHC,GAAI,GACJC,GAAI,IAGOC,EAAyBC,OAAOC,QAAEA,YACvC,EAAAC,EAAAC,cAEN,MACMC,EADM,IAAIC,IAAIJ,EAAQK,KACLC,SAASC,SAAS,QAEnCC,GAAW,EAAAC,EAAAC,gBACfP,GAAa,EAAAQ,EAAAC,UAASC,KAAKC,MAAO,QAAKC,GAEzC,IACE,MAAMC,QAAa,EAAAf,EAAAgB,SAAQT,EAASU,UACpC,OAAO,EAAAC,EAAAC,MAAK,C,SAAEZ,E,KAAUQ,G,CACxB,MAAOK,GACP,GAAIA,aAAiBC,UAA6B,MAAjBD,EAAME,OACrC,OAAO,EAAAJ,EAAAC,MAAK,C,SACVZ,EACAQ,KAAM,IAAK1B,EAAYkC,IAAKhB,EAASU,YAGzC,MAAMG,C,GAIGI,EAAyB1B,OAAOC,QAAEA,MAC7C,MAAMK,EAAM,IAAID,IAAIJ,EAAQK,KACtBqB,EAAWC,OAAOC,kBAAkB5B,EAAQ0B,YAClDG,QAAQC,IAAI,C,SAAEJ,IACd,IAME,aALMzB,EAAA8B,MAAMC,IACTN,IAII,EAAAP,EAAAc,UAAS5B,EAAIC,SAASC,SAAS,QAAU,WAAa,I,CAC7D,MAAOc,GAEP,OADAQ,QAAQK,KAAKb,IACN,EAAAF,EAAAC,MAAK,K,OAsBhBe,EAlBmD,KACjD,MAAM3B,SAAEA,EAAQQ,KAAEA,IAAS,EAAAG,EAAAiB,iBAIrBC,GAAc,EAAA1B,EAAA2B,QAAO,IAAIzB,KAAKL,GAAW,UAG/C,OAFAqB,QAAQC,IAAI,WAAY,C,KAAEd,KAGxB,EAAA5B,EAAAmD,MAACC,EAAAC,IAAG,CAACC,GAAG,OAAOC,SAAS,QAAQC,EAAE,I,WAChC,EAAAxD,EAAAmD,MAACC,EAAAK,QAAO,CAACC,GAAG,IAAIC,GAAG,I,UAAI,sBACDV,MAEtB,EAAAjD,EAAA4D,KAACC,EAAAC,QAAQ,CAAClC,KAAMA,MACZ,C,qEC9EV,IAAA5B,EAAAC,EAAA,S,uEAsCA8D,EA9BK,EAACnC,KAAEA,MACNa,QAAQC,IAAI,C,KAAEd,KAEZ,EAAA5B,EAAA4D,KAACI,EAAAC,KAAI,CAACC,OAAO,O,UACX,EAAAlE,EAAAmD,MAACC,EAAAe,WAAU,CAACC,SAAU,E,UACnBvD,EAAAwD,KAAKC,KAAKC,IACT,EAAAvE,EAAA4D,KAACY,EAAAV,QAAU,CAETW,KAAMF,EACNZ,GAAG,IACHe,aAAc9C,EAAK2C,GACnBI,YAAa,CAAEC,UAAU,EAAMC,UAAW,MAJrCN,MAOT,EAAAvE,EAAA4D,KAAC,QAAK,CAACkB,KAAK,SAASC,GAAG,MAAMN,KAAK,MAAMO,MAAOpD,EAAKQ,OACrD,EAAApC,EAAA4D,KAAC,QAAK,CAACkB,KAAK,SAASC,GAAG,OAAON,KAAK,OAAOO,MAAOpD,EAAKqD,QACvD,EAAAjF,EAAA4D,KAACR,EAAA8B,OAAM,CACLJ,KAAK,SACLK,YAAY,OACZC,MAAM,OACN7B,SAAU,CAAC,KAAM,SACjBI,GAAG,I,SACJ,c","sources":["src/components/EditPage.tsx","src/components/MenuForm.tsx"],"sourcesContent":["import React from \"react\";\nimport { Box, Heading } from \"@chakra-ui/react\";\nimport { format, addWeeks } from \"date-fns\";\nimport {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  redirect,\n  useLoaderData,\n} from \"react-router\";\nimport { local, Menu, getSession, getMenu, Menu as MenuRecord } from \"../db\";\nimport { getMenuDateFor } from \"../utils\";\nimport MenuForm from \"./MenuForm\";\n\nconst BLANK_MENU: Menu = {\n  M: \"\",\n  T: \"\",\n  W: \"\",\n  Th: \"\",\n  F: \"\",\n  Sa: \"\",\n  Su: \"\",\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await getSession();\n\n  const url = new URL(request.url);\n  const isPlanning = url.pathname.includes(\"plan\");\n\n  const menuDate = getMenuDateFor(\n    isPlanning ? addWeeks(Date.now(), 1) : undefined\n  );\n  try {\n    const menu = await getMenu(menuDate.toJSON());\n    return json({ menuDate, menu });\n  } catch (error) {\n    if (error instanceof Response && error.status === 404) {\n      return json({\n        menuDate,\n        menu: { ...BLANK_MENU, _id: menuDate.toJSON() },\n      });\n    }\n    throw error;\n  }\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const url = new URL(request.url);\n  const formData = Object.fromEntries(await request.formData());\n  console.log({ formData });\n  try {\n    await local.put(\n      (formData as unknown) as PouchDB.Core.PutDocument<\n        Menu & PouchDB.Core.IdMeta & PouchDB.Core.ExistingDocument<Menu>\n      >\n    );\n    return redirect(url.pathname.includes(\"plan\") ? \"/preview\" : \"/\");\n  } catch (error) {\n    console.warn(error);\n    return json(null);\n  }\n};\n\nconst EditPage: React.FC<{ planning?: boolean }> = () => {\n  const { menuDate, menu } = useLoaderData() as {\n    menuDate: string;\n    menu: PouchDB.Core.ExistingDocument<MenuRecord>;\n  };\n  const currentWeek = format(new Date(menuDate), \"MMM do\");\n  console.log(\"EditPage\", { menu });\n\n  return (\n    <Box mx=\"auto\" maxWidth=\"500px\" p=\"3\">\n      <Heading mt=\"0\" mb=\"4\">\n        Edit Weekly Menu - {currentWeek}\n      </Heading>\n      <MenuForm menu={menu} />\n    </Box>\n  );\n};\n\nexport default EditPage;\n","import React from \"react\";\nimport { Button, SimpleGrid } from \"@chakra-ui/react\";\nimport { Form } from \"react-router-dom\";\nimport { Menu, DAYS } from \"../db\";\nimport InputGroup from \"./InputGroup\";\n\nconst MenuForm: React.FC<{\n  menu: PouchDB.Core.ExistingDocument<Menu>;\n}> = ({ menu }) => {\n  console.log({ menu });\n  return (\n    <Form method=\"post\">\n      <SimpleGrid spacingY={3}>\n        {DAYS.map((day) => (\n          <InputGroup\n            key={day}\n            name={day}\n            mb=\"2\"\n            defaultValue={menu[day]}\n            validations={{ required: true, maxLength: 100 }}\n          />\n        ))}\n        <input type=\"hidden\" id=\"_id\" name=\"_id\" value={menu._id} />\n        <input type=\"hidden\" id=\"_rev\" name=\"_rev\" value={menu._rev} />\n        <Button\n          type=\"submit\"\n          colorScheme=\"pink\"\n          width=\"100%\"\n          maxWidth={[null, \"10rem\"]}\n          mb=\"3\"\n        >\n          Save\n        </Button>\n      </SimpleGrid>\n    </Form>\n  );\n};\n\nexport default MenuForm;\n"],"names":["$k4ank","parcelRequire","$016a7f68f397bea3$var$BLANK_MENU","M","T","W","Th","F","Sa","Su","$016a7f68f397bea3$export$f4c5de44377d2946","async","request","$fiQoM","getSession","isPlanning","URL","url","pathname","includes","menuDate","$8Xs7T","getMenuDateFor","$80TUu","addWeeks","Date","now","undefined","menu","getMenu","toJSON","$3T949","json","error","Response","status","_id","$016a7f68f397bea3$export$31eb53bd5b582a97","formData","Object","fromEntries","console","log","local","put","redirect","warn","$016a7f68f397bea3$export$2e2bcd8739ae039","useLoaderData","currentWeek","format","jsxs","$1idYv","Box","mx","maxWidth","p","Heading","mt","mb","jsx","$6bwyZ","default","$20eb6da75de2e27f$export$2e2bcd8739ae039","$fIsAN","Form","method","SimpleGrid","spacingY","DAYS","map","day","$1xLD5","name","defaultValue","validations","required","maxLength","type","id","value","_rev","Button","colorScheme","width"],"version":3,"file":"EditPage.a9a5a063.js.map"}