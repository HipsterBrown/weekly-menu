{"mappings":"odAAA,IAAAA,EAAAC,EAAA,S,6FAQO,MAAMC,EAAyBC,UACpC,IAEE,aADM,EAAAC,EAAAC,eACC,EAAAC,EAAAC,UAAS,I,CAChB,MAAOC,GACP,GACEA,aAAiBC,WAChB,EAAAC,EAAAC,WAAUH,IAA2B,MAAjBA,EAAMI,OAE3B,OAAO,EAAAN,EAAAO,MAAK,MAEd,MAAML,C,GAIGM,EAAyBX,OAAOY,QAAEA,MAC7C,MAAMC,SAAEA,EAAQC,SAAEA,GAAaC,OAAOC,kBAAkBJ,EAAQK,YAGhE,aAFM,EAAAhB,EAAAiB,OAAMC,OAAON,GAAWM,OAAOL,KAE9B,EAAAX,EAAAC,UAAS,IAAI,E,IAkCtBgB,EA/B4B,KAExB,EAAAvB,EAAAwB,MAACC,EAAAC,WAAU,CAACC,SAAS,IAAIC,SAAS,QAAQC,GAAG,OAAOC,EAAE,I,WACpD,EAAA9B,EAAA+B,KAACN,EAAAO,QAAO,C,SAAC,WACT,EAAAhC,EAAA+B,KAACE,EAAAC,KAAI,CAACC,OAAO,O,UACX,EAAAnC,EAAAwB,MAACC,EAAAC,WAAU,CAACC,SAAS,I,WACnB,EAAA3B,EAAA+B,KAACK,EAAAC,QAAU,CACTC,KAAK,WACLC,MAAM,WACNC,YAAa,CAAEC,UAAU,MAE3B,EAAAzC,EAAA+B,KAACK,EAAAC,QAAU,CACTC,KAAK,WACLC,MAAM,WACNG,KAAK,WACLF,YAAa,CAAEC,UAAU,MAE3B,EAAAzC,EAAA+B,KAACN,EAAAkB,OAAM,CACLD,KAAK,SACLE,YAAY,OACZC,MAAM,OACNjB,SAAU,CAAC,KAAM,S,SAClB,iB","sources":["src/components/LoginPage.tsx"],"sourcesContent":["import React from \"react\";\nimport { Button, Heading, SimpleGrid } from \"@chakra-ui/react\";\nimport { ActionFunction, json, LoaderFunction, redirect } from \"react-router\";\nimport { Form } from \"react-router-dom\";\nimport { getSession, login } from \"../db\";\nimport InputGroup from \"./InputGroup\";\nimport { hasStatus } from \"../utils\";\n\nexport const loader: LoaderFunction = async () => {\n  try {\n    await getSession();\n    return redirect(\"/\");\n  } catch (error) {\n    if (\n      error instanceof Response ||\n      (hasStatus(error) && error.status === 401)\n    ) {\n      return json(null);\n    }\n    throw error;\n  }\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const { username, password } = Object.fromEntries(await request.formData());\n  await login(String(username), String(password));\n\n  return redirect(\"/\");\n};\n\nconst LoginPage: React.FC = () => {\n  return (\n    <SimpleGrid spacingY=\"3\" maxWidth=\"600px\" mx=\"auto\" p=\"3\">\n      <Heading>Login</Heading>\n      <Form method=\"post\">\n        <SimpleGrid spacingY=\"3\">\n          <InputGroup\n            name=\"username\"\n            label=\"Username\"\n            validations={{ required: true }}\n          />\n          <InputGroup\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            validations={{ required: true }}\n          />\n          <Button\n            type=\"submit\"\n            colorScheme=\"pink\"\n            width=\"100%\"\n            maxWidth={[null, \"10rem\"]}\n          >\n            Login\n          </Button>\n        </SimpleGrid>\n      </Form>\n    </SimpleGrid>\n  );\n};\n\nexport default LoginPage;\n"],"names":["$k4ank","parcelRequire","$4ca131af693bfbf1$export$f4c5de44377d2946","async","$fiQoM","getSession","$3T949","redirect","error","Response","$8Xs7T","hasStatus","status","json","$4ca131af693bfbf1$export$31eb53bd5b582a97","request","username","password","Object","fromEntries","formData","login","String","$4ca131af693bfbf1$export$2e2bcd8739ae039","jsxs","$1idYv","SimpleGrid","spacingY","maxWidth","mx","p","jsx","Heading","$fIsAN","Form","method","$1xLD5","default","name","label","validations","required","type","Button","colorScheme","width"],"version":3,"file":"LoginPage.b7a007a6.js.map"}