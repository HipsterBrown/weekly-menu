{"mappings":"6YAAA,IAAAA,EAAAC,EAAA,iHASA,MAAMC,EAAyB,IAC7BF,EAAAG,IAACC,EAAAC,KAAI,CAVPC,SAAA,8EAeMC,EAAuB,IAC3BP,EAAAQ,KAACJ,EAAAK,WAAU,CAACC,SAAQ,IAAKC,SAAQ,kBAC/BX,EAAAG,IAACC,EAAAQ,SAAQ,CAACC,OAAM,SAChBb,EAAAG,IAACC,EAAAQ,SAAQ,CAACC,OAAM,SAChBb,EAAAG,IAACC,EAAAQ,SAAQ,CAACC,OAAM,SAChBb,EAAAG,IAACC,EAAAQ,SAAQ,CAACC,OAAM,SAChBb,EAAAG,IAACC,EAAAQ,SAAQ,CAACC,OAAM,SAChBb,EAAAG,IAACC,EAAAQ,SAAQ,CAACC,OAAM,SAChBb,EAAAG,IAACC,EAAAQ,SAAQ,CAACC,OAAM,YAIdC,EAAwBC,EAAAC,oBAAoBhB,EAAAG,IAACD,EAAY,SAkC/De,EAhCkC,KAChC,MAAMC,EAAWC,EAAAC,iBACXC,EAAcC,EAAAC,OAAOL,EAAU,UAC/BM,EAAOC,EAAAC,WAAWR,EAASS,WAhCnCC,SAiCUA,EAjCVC,SAiCoBA,GAAaV,EAAAW,kBAjCjCC,QAqCUA,EArCVC,MAqCmBA,GAAUP,EAAAQ,aAQ3B,OANAC,EAAAC,WAAU,KACJP,GAAYC,GACdG,EAAMJ,EAAUC,KAEjB,CAACD,EAAUC,IAGZ7B,EAAAQ,KAACJ,EAAAgC,IAAG,CAACC,EAAC,cACJrC,EAAAQ,KAACJ,EAAAkC,QAAO,CAACC,GAAE,IAAKC,GAAE,+BACDnB,KAEjBrB,EAAAG,IAACW,EAAqB,CAlD5BR,SAmDQN,EAAAG,IAACsC,EAAAC,QAAoB,CAnD7BpC,SAoDUN,EAAAG,IAAC+B,EAAAS,SAAQ,CAACC,SAAU5C,EAAAG,IAACI,EAAU,IApDzCD,SAqDYN,EAAAG,IAAC0C,EAAAH,QAAI,CAAClB,KAAMA,SAHUO,GAASe","sources":["src/components/DisplayModePage.tsx"],"sourcesContent":["import React, { Suspense, useEffect } from \"react\";\nimport { Box, Heading, SimpleGrid, Skeleton, Text } from \"@chakra-ui/react\";\nimport { format } from \"date-fns\";\nimport { useQueryDB, useSession } from \"../db\";\nimport { getMenuDateFor, useQueryParams } from \"../utils\";\nimport SessionErrorBoundary from \"./SessionErrorBoundary\";\nimport { createErrorBoundary } from \"./NotFoundErrorBoundary\";\nimport Menu from \"./Menu\";\n\nconst MenuFallback: React.FC = () => (\n  <Text>\n    No menu found for this week. Please add menu items on a different device.\n  </Text>\n);\n\nconst MenuLoader: React.FC = () => (\n  <SimpleGrid spacingY=\"3\" maxWidth=\"300px\">\n    <Skeleton height=\"30px\" />\n    <Skeleton height=\"30px\" />\n    <Skeleton height=\"30px\" />\n    <Skeleton height=\"30px\" />\n    <Skeleton height=\"30px\" />\n    <Skeleton height=\"30px\" />\n    <Skeleton height=\"30px\" />\n  </SimpleGrid>\n);\n\nconst NotFoundErrorBoundary = createErrorBoundary(<MenuFallback />);\n\nconst DisplayModePage: React.FC = () => {\n  const menuDate = getMenuDateFor();\n  const currentWeek = format(menuDate, \"MMM do\");\n  const menu = useQueryDB(menuDate.toJSON());\n  const { username, password } = useQueryParams<{\n    username: string;\n    password: string;\n  }>();\n  const { session, login } = useSession();\n\n  useEffect(() => {\n    if (username && password) {\n      login(username, password);\n    }\n  }, [username, password]);\n\n  return (\n    <Box p=\"3\">\n      <Heading mt=\"0\" mb=\"4\">\n        Weekly Menu - {currentWeek}\n      </Heading>\n      <NotFoundErrorBoundary key={session?.name}>\n        <SessionErrorBoundary>\n          <Suspense fallback={<MenuLoader />}>\n            <Menu menu={menu} />\n          </Suspense>\n        </SessionErrorBoundary>\n      </NotFoundErrorBoundary>\n    </Box>\n  );\n};\n\nexport default DisplayModePage;\n"],"names":["$k4ank","parcelRequire","$713aed745208d714$var$MenuFallback","jsx","$37woU","Text","children","$713aed745208d714$var$MenuLoader","jsxs","SimpleGrid","spacingY","maxWidth","Skeleton","height","$713aed745208d714$var$NotFoundErrorBoundary","$hmWjK","createErrorBoundary","$713aed745208d714$export$2e2bcd8739ae039","menuDate","$8Xs7T","getMenuDateFor","currentWeek","$80TUu","format","menu","$fiQoM","useQueryDB","toJSON","username","password","useQueryParams","session","login","useSession","$8T3gX","useEffect","Box","p","Heading","mt","mb","$1k9WB","default","Suspense","fallback","$hXCME","name"],"version":3,"file":"DisplayModePage.93836cdb.js.map"}