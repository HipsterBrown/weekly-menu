{"mappings":"6YAAA,IAAAA,EAAAC,EAAA,S,qHAkBA,MAAMC,EAAgD,EAACC,QAAEA,MACvD,EAAAH,EAAAI,MAAAJ,EAAAK,SAAA,C,WACE,EAAAL,EAAAM,KAACC,EAAAC,KAAI,C,SAAC,kCACN,EAAAR,EAAAM,KAACC,EAAAE,KAAI,CACHC,MAAM,WACNC,GAAIC,EAAAH,KACJI,GAAIV,EAAU,QAAU,QACxBW,GAAG,I,SACJ,sBAMCC,EAAuB,KAC3B,EAAAf,EAAAI,MAACG,EAAAS,WAAU,CAACC,SAAS,IAAIC,SAAS,Q,WAChC,EAAAlB,EAAAM,KAACC,EAAAY,SAAQ,CAACC,OAAO,UACjB,EAAApB,EAAAM,KAACC,EAAAY,SAAQ,CAACC,OAAO,UACjB,EAAApB,EAAAM,KAACC,EAAAY,SAAQ,CAACC,OAAO,UACjB,EAAApB,EAAAM,KAACC,EAAAY,SAAQ,CAACC,OAAO,UACjB,EAAApB,EAAAM,KAACC,EAAAY,SAAQ,CAACC,OAAO,UACjB,EAAApB,EAAAM,KAACC,EAAAY,SAAQ,CAACC,OAAO,UACjB,EAAApB,EAAAM,KAACC,EAAAY,SAAQ,CAACC,OAAO,YAIfC,GAAwB,EAAAC,EAAAC,sBAAoB,EAAAvB,EAAAM,KAACJ,EAAY,K,IAqD/DsB,EAnDmD,EAACrB,QAAEA,MACpD,MAAMsB,GAAW,EAAAC,EAAAC,gBACfxB,GAAU,EAAAyB,EAAAC,UAASC,KAAKC,MAAO,QAAKC,GAEhCC,GAAc,EAAAL,EAAAM,QAAOT,EAAU,UAC/BU,GAAO,EAAAC,EAAAC,YAAWZ,EAASa,UAEjC,OACE,EAAAtC,EAAAI,MAACG,EAAAgC,IAAG,CAACC,EAAE,I,WACL,EAAAxC,EAAAI,MAACG,EAAAkC,QAAO,CAACC,GAAG,IAAIC,GAAG,I,UAAI,iBACNV,MAEjB,EAAAjC,EAAAM,KAACe,EAAqB,CAAClB,QAASA,E,UAC9B,EAAAH,EAAAM,KAACsC,EAAAC,QAAoB,C,UACnB,EAAA7C,EAAAI,MAAC0C,EAAAC,SAAQ,CAACC,UAAU,EAAAhD,EAAAM,KAACS,EAAU,I,WAC7B,EAAAf,EAAAM,KAAC2C,EAAAJ,QAAI,CAACV,KAAMA,KACZ,EAAAnC,EAAAI,MAACG,EAAAC,KAAI,CAACM,GAAG,I,UACNX,IACC,EAAAH,EAAAI,MAAAJ,EAAAK,SAAA,C,WACE,EAAAL,EAAAM,KAACC,EAAAE,KAAI,CAACC,MAAM,WAAWC,GAAIC,EAAAH,KAAYI,GAAG,QAAQqC,GAAG,I,SAAI,SAElD,KAEP,EAAAlD,EAAAM,KAACC,EAAAE,KAAI,CAACC,MAAM,WAAWC,GAAIC,EAAAH,KAAYI,GAAG,QAAQsC,GAAG,I,SAAI,mBAElD,KAEP,EAAAnD,EAAAM,KAACC,EAAAE,KAAI,CAACC,MAAM,WAAWC,GAAIC,EAAAH,KAAYI,GAAG,WAAWuC,GAAG,I,SAAI,yBAK/DjD,IACC,EAAAH,EAAAI,MAAAJ,EAAAK,SAAA,C,WACE,EAAAL,EAAAM,KAACC,EAAAE,KAAI,CAACC,MAAM,WAAWC,GAAIC,EAAAH,KAAYI,GAAG,QAAQqC,GAAG,I,SAAI,SAElD,KAEP,EAAAlD,EAAAM,KAACC,EAAAE,KAAI,CAACC,MAAM,WAAWC,GAAIC,EAAAH,KAAYI,GAAG,IAAIuC,GAAG,I,SAAI,0BAS7D,C","sources":["src/components/IndexPage.tsx"],"sourcesContent":["import React, { Suspense } from \"react\";\nimport {\n  Box,\n  Heading,\n  Link,\n  SimpleGrid,\n  Skeleton,\n  Text,\n} from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { format, addWeeks } from \"date-fns\";\nimport { useQueryDB } from \"../db\";\nimport { getMenuDateFor } from \"../utils\";\nimport SessionErrorBoundary from \"./SessionErrorBoundary\";\nimport { createErrorBoundary } from \"./NotFoundErrorBoundary\";\nimport NavBar from \"./NavBar\";\nimport Menu from \"./Menu\";\n\nconst MenuFallback: React.FC<{ preview?: boolean }> = ({ preview }) => (\n  <>\n    <Text>No menu found for this week.</Text>\n    <Link\n      color=\"teal.500\"\n      as={RouterLink}\n      to={preview ? \"/plan\" : \"/edit\"}\n      pb=\"4\"\n    >\n      Add menu items\n    </Link>\n  </>\n);\n\nconst MenuLoader: React.FC = () => (\n  <SimpleGrid spacingY=\"3\" maxWidth=\"300px\">\n    <Skeleton height=\"30px\" />\n    <Skeleton height=\"30px\" />\n    <Skeleton height=\"30px\" />\n    <Skeleton height=\"30px\" />\n    <Skeleton height=\"30px\" />\n    <Skeleton height=\"30px\" />\n    <Skeleton height=\"30px\" />\n  </SimpleGrid>\n);\n\nconst NotFoundErrorBoundary = createErrorBoundary(<MenuFallback />);\n\nconst IndexPage: React.FC<{ preview?: boolean }> = ({ preview }) => {\n  const menuDate = getMenuDateFor(\n    preview ? addWeeks(Date.now(), 1) : undefined\n  );\n  const currentWeek = format(menuDate, \"MMM do\");\n  const menu = useQueryDB(menuDate.toJSON());\n\n  return (\n    <Box p=\"3\">\n      <Heading mt=\"0\" mb=\"4\">\n        Weekly Menu - {currentWeek}\n      </Heading>\n      <NotFoundErrorBoundary preview={preview}>\n        <SessionErrorBoundary>\n          <Suspense fallback={<MenuLoader />}>\n            <Menu menu={menu} />\n            <Text pb=\"4\">\n              {preview || (\n                <>\n                  <Link color=\"teal.500\" as={RouterLink} to=\"/edit\" pr=\"3\">\n                    Edit\n                  </Link>\n                  |\n                  <Link color=\"teal.500\" as={RouterLink} to=\"/plan\" px=\"3\">\n                    Plan next week\n                  </Link>\n                  |\n                  <Link color=\"teal.500\" as={RouterLink} to=\"/preview\" pl=\"3\">\n                    Preview next week\n                  </Link>\n                </>\n              )}\n              {preview && (\n                <>\n                  <Link color=\"teal.500\" as={RouterLink} to=\"/plan\" pr=\"3\">\n                    Plan\n                  </Link>\n                  |\n                  <Link color=\"teal.500\" as={RouterLink} to=\"/\" pl=\"3\">\n                    Return\n                  </Link>\n                </>\n              )}\n            </Text>\n          </Suspense>\n        </SessionErrorBoundary>\n      </NotFoundErrorBoundary>\n    </Box>\n  );\n};\n\nexport default IndexPage;\n"],"names":["$k4ank","parcelRequire","$9354f69d464e3d4d$var$MenuFallback","preview","jsxs","Fragment","jsx","$37woU","Text","Link","color","as","$7f4iG","to","pb","$9354f69d464e3d4d$var$MenuLoader","SimpleGrid","spacingY","maxWidth","Skeleton","height","$9354f69d464e3d4d$var$NotFoundErrorBoundary","$hmWjK","createErrorBoundary","$9354f69d464e3d4d$export$2e2bcd8739ae039","menuDate","$8Xs7T","getMenuDateFor","$80TUu","addWeeks","Date","now","undefined","currentWeek","format","menu","$fiQoM","useQueryDB","toJSON","Box","p","Heading","mt","mb","$1k9WB","default","$8T3gX","Suspense","fallback","$hXCME","pr","px","pl"],"version":3,"file":"IndexPage.cca0edbf.js.map"}