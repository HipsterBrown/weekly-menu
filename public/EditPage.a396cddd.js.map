{"mappings":"wZAAA,IAAAA,EAAAC,EAAA,S,qHAWA,MAAMC,EAAmB,CACvBC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,GAAI,GACJC,EAAG,GACHC,GAAI,GACJC,GAAI,IAgBAC,EAED,EAACC,SAAEA,MACN,MAAMC,EAAoB,CACxBC,KAAI,IACKX,GAGX,OAAO,EAAAF,EAAAc,KAACC,EAAAC,QAAQ,CAACC,KAAML,EAAmBD,SAAUA,GAAY,E,IA8BlEO,EA3BmD,EAACC,SAAEA,MACpD,MAAMC,GAAW,EAAAC,EAAAC,gBACfH,GAAW,EAAAI,EAAAC,UAASC,KAAKC,MAAO,QAAKC,GAEjCC,GAAc,EAAAL,EAAAM,QAAOT,EAAU,UAC/BH,GAAO,EAAAa,EAAAC,YAAWX,EAASY,UAC3BrB,EA9Bc,EAACS,EAAkBa,EAAuB,OAC9D,MAAMC,GAAW,EAAAC,EAAAC,eASjB,OARiBC,MACfC,EACAC,WAEMT,EAAAU,MAAMC,IAAI,CAAEC,IAAKtB,KAAamB,KAAQD,IAC5CK,QAAQC,IAAI,C,aAAEX,IACdC,EAASD,EAAa,CAET,EAoBEY,CACfzB,EAASY,SACTb,EAAW,WAAa,KAG1B,OACE,EAAAnB,EAAA8C,MAACC,EAAAC,IAAG,CAACC,GAAG,OAAOC,SAAS,QAAQC,EAAE,I,WAChC,EAAAnD,EAAA8C,MAACC,EAAAK,QAAO,CAACC,GAAG,IAAIC,GAAG,I,UAAI,sBACD1B,MAEtB,EAAA5B,EAAAc,KAACyC,EAAAvC,QAAqB,CAACwC,UAAU,EAAAxD,EAAAc,KAACJ,EAAY,CAACC,SAAUA,I,UACvD,EAAAX,EAAAc,KAAC2C,EAAAzC,QAAoB,C,UACnB,EAAAhB,EAAAc,KAAC4C,EAAAC,SAAQ,CAACH,UAAU,EAAAxD,EAAAc,KAACiC,EAAAa,QAAO,CAACC,KAAK,O,UAChC,EAAA7D,EAAAc,KAACC,EAAAC,QAAQ,CAACC,KAAMA,EAAMN,SAAUA,YAIlC,C,qECpEV,IAAAX,EAAAC,EAAA,S,gFAOA,MAAM6D,EAAaC,EAAAC,OACjBlC,EAAAmC,KAAKC,QACH,CAACC,EAAQC,KAAS,IACbD,EACHC,CAACA,GAAML,EAAAM,SAAaC,SAAS,0BAA0BC,IAAI,QAE7D,K,IAqCJC,EA9BK,EAACvD,KAAEA,EAAIN,SAAEA,MACZ,MAAM4B,EAAMtB,EAAKJ,OAEjB,OACE,EAAAb,EAAAc,KAAC2D,EAAAC,OAAM,CACLC,cAAepC,EACfqC,oBAAkB,EAClBjE,SAAW2B,GAAW3B,EAAS2B,EAAQC,GACvCsC,iBAAkBf,E,UAElB,EAAA9D,EAAAc,KAAC2D,EAAAK,KAAI,C,UACH,EAAA9E,EAAA8C,MAACC,EAAAgC,WAAU,CAACC,SAAS,I,UAClBlD,EAAAmC,KAAKgB,KAAKb,IACT,EAAApE,EAAAc,KAACoE,EAAAlE,QAAU,CAAWmE,KAAMf,EAAKd,GAAG,KAAnBc,MAEnB,EAAApE,EAAAc,KAACiC,EAAAqC,OAAM,CACLC,KAAK,SACLC,YAAY,OACZC,MAAM,OACNrC,SAAU,CAAC,KAAM,SACjBI,GAAG,I,SACJ,eAKE,C","sources":["src/components/EditPage.tsx","src/components/MenuForm.tsx"],"sourcesContent":["import React, { Suspense } from \"react\";\nimport { Box, Heading, Spinner } from \"@chakra-ui/react\";\nimport { format, addWeeks } from \"date-fns\";\nimport { useNavigate } from \"react-router\";\nimport { local, useQueryDB, Menu, MenuResource } from \"../db\";\nimport { getMenuDateFor } from \"../utils\";\nimport SessionErrorBoundary from \"./SessionErrorBoundary\";\nimport NotFoundErrorBoundary from \"./NotFoundErrorBoundary\";\nimport NavBar from \"./NavBar\";\nimport MenuForm from \"./MenuForm\";\n\nconst BLANK_MENU: Menu = {\n  M: \"\",\n  T: \"\",\n  W: \"\",\n  Th: \"\",\n  F: \"\",\n  Sa: \"\",\n  Su: \"\",\n};\n\nconst useMenuUpdate = (menuDate: string, returnToPath: string = \"/\") => {\n  const navigate = useNavigate();\n  const onSubmit = async (\n    values: Menu,\n    doc: ReturnType<MenuResource[\"read\"]>\n  ) => {\n    await local.put({ _id: menuDate, ...doc, ...values });\n    console.log({ returnToPath });\n    navigate(returnToPath);\n  };\n  return onSubmit;\n};\n\nconst FallbackForm: React.FC<{\n  onSubmit: ReturnType<typeof useMenuUpdate>;\n}> = ({ onSubmit }) => {\n  const blankMenuResource = {\n    read() {\n      return BLANK_MENU as ReturnType<MenuResource[\"read\"]>;\n    },\n  };\n  return <MenuForm menu={blankMenuResource} onSubmit={onSubmit} />;\n};\n\nconst EditPage: React.FC<{ planning?: boolean }> = ({ planning }) => {\n  const menuDate = getMenuDateFor(\n    planning ? addWeeks(Date.now(), 1) : undefined\n  );\n  const currentWeek = format(menuDate, \"MMM do\");\n  const menu = useQueryDB(menuDate.toJSON());\n  const onSubmit = useMenuUpdate(\n    menuDate.toJSON(),\n    planning ? \"/preview\" : \"/\"\n  );\n\n  return (\n    <Box mx=\"auto\" maxWidth=\"500px\" p=\"3\">\n      <Heading mt=\"0\" mb=\"4\">\n        Edit Weekly Menu - {currentWeek}\n      </Heading>\n      <NotFoundErrorBoundary fallback={<FallbackForm onSubmit={onSubmit} />}>\n        <SessionErrorBoundary>\n          <Suspense fallback={<Spinner size=\"lg\" />}>\n            <MenuForm menu={menu} onSubmit={onSubmit} />\n          </Suspense>\n        </SessionErrorBoundary>\n      </NotFoundErrorBoundary>\n    </Box>\n  );\n};\n\nexport default EditPage;\n","import React from \"react\";\nimport { Button, SimpleGrid } from \"@chakra-ui/react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Menu, MenuResource, DAYS } from \"../db\";\nimport InputGroup from \"./InputGroup\";\n\nconst FormSchema = Yup.object(\n  DAYS.reduce(\n    (result, day) => ({\n      ...result,\n      [day]: Yup.string().required(\"This field is required\").max(100),\n    }),\n    {}\n  )\n);\n\nconst MenuForm: React.FC<{\n  menu: MenuResource;\n  onSubmit: (values: Menu, doc: ReturnType<MenuResource[\"read\"]>) => void;\n}> = ({ menu, onSubmit }) => {\n  const doc = menu.read();\n\n  return (\n    <Formik\n      initialValues={doc}\n      enableReinitialize\n      onSubmit={(values) => onSubmit(values, doc)}\n      validationSchema={FormSchema}\n    >\n      <Form>\n        <SimpleGrid spacingY=\"3\">\n          {DAYS.map((day) => (\n            <InputGroup key={day} name={day} mb=\"2\" />\n          ))}\n          <Button\n            type=\"submit\"\n            colorScheme=\"pink\"\n            width=\"100%\"\n            maxWidth={[null, \"10rem\"]}\n            mb=\"3\"\n          >\n            Save\n          </Button>\n        </SimpleGrid>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default MenuForm;\n"],"names":["$k4ank","parcelRequire","$016a7f68f397bea3$var$BLANK_MENU","M","T","W","Th","F","Sa","Su","$016a7f68f397bea3$var$FallbackForm","onSubmit","blankMenuResource","read","jsx","$6bwyZ","default","menu","$016a7f68f397bea3$export$2e2bcd8739ae039","planning","menuDate","$8Xs7T","getMenuDateFor","$80TUu","addWeeks","Date","now","undefined","currentWeek","format","$fiQoM","useQueryDB","toJSON","returnToPath","navigate","$aR93f","useNavigate","async","values","doc","local","put","_id","console","log","$016a7f68f397bea3$var$useMenuUpdate","jsxs","$37woU","Box","mx","maxWidth","p","Heading","mt","mb","$hmWjK","fallback","$1k9WB","$8T3gX","Suspense","Spinner","size","$20eb6da75de2e27f$var$FormSchema","$aNkVi","object","DAYS","reduce","result","day","string","required","max","$20eb6da75de2e27f$export$2e2bcd8739ae039","$g2LMr","Formik","initialValues","enableReinitialize","validationSchema","Form","SimpleGrid","spacingY","map","$1xLD5","name","Button","type","colorScheme","width"],"version":3,"file":"EditPage.a396cddd.js.map"}