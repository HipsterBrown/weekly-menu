{"mappings":"sbAAA,IAAAA,EAAAC,EAAA,S,0GASO,MAAMC,EAAyBC,OAAOC,QAAEA,YACvC,EAAAC,EAAAC,cAEN,MACMC,EADM,IAAIC,IAAIJ,EAAQK,KACNC,SAASC,SAAS,WAClCC,GAAW,EAAAC,EAAAC,gBACfP,GAAY,EAAAQ,EAAAC,UAASC,KAAKC,MAAO,QAAKC,GAElCC,QAAa,EAAAf,EAAAgB,SAAQT,EAASU,UACpC,OAAO,EAAAC,EAAAC,MAAK,C,SAAEZ,E,KAAUQ,GAAO,E,IAgDjCK,EA7CmD,EAACC,QAAEA,MACpD,MAAMd,SAAEA,EAAQQ,KAAEA,IAAS,EAAAG,EAAAI,iBAIrBC,GAAc,EAAAb,EAAAc,QAAO,IAAIZ,KAAKL,GAAW,UAE/C,OACE,EAAAZ,EAAA8B,MAACC,EAAAC,IAAG,CAACC,EAAE,I,WACL,EAAAjC,EAAA8B,MAACC,EAAAG,QAAO,CAACC,GAAG,IAAIC,GAAG,I,UAAI,iBACNR,MAEjB,EAAA5B,EAAAqC,KAACC,EAAAC,QAAI,CAACnB,KAAMA,KACZ,EAAApB,EAAA8B,MAACC,EAAAS,KAAI,CAACC,GAAG,I,UACNf,IACC,EAAA1B,EAAA8B,MAAA9B,EAAA0C,SAAA,C,WACE,EAAA1C,EAAAqC,KAACN,EAAAY,KAAI,CAACC,MAAM,WAAWC,GAAIC,EAAAH,KAAYI,GAAG,QAAQC,GAAG,I,SAAI,SAElD,KAEP,EAAAhD,EAAAqC,KAACN,EAAAY,KAAI,CAACC,MAAM,WAAWC,GAAIC,EAAAH,KAAYI,GAAG,QAAQE,GAAG,I,SAAI,mBAElD,KAEP,EAAAjD,EAAAqC,KAACN,EAAAY,KAAI,CAACC,MAAM,WAAWC,GAAIC,EAAAH,KAAYI,GAAG,WAAWG,GAAG,I,SAAI,yBAK/DxB,IACC,EAAA1B,EAAA8B,MAAA9B,EAAA0C,SAAA,C,WACE,EAAA1C,EAAAqC,KAACN,EAAAY,KAAI,CAACC,MAAM,WAAWC,GAAIC,EAAAH,KAAYI,GAAG,QAAQC,GAAG,I,SAAI,SAElD,KAEP,EAAAhD,EAAAqC,KAACN,EAAAY,KAAI,CAACC,MAAM,WAAWC,GAAIC,EAAAH,KAAYI,GAAG,IAAIG,GAAG,I,SAAI,mBAMvD,C","sources":["src/components/IndexPage.tsx"],"sourcesContent":["import React from \"react\";\nimport { Box, Heading, Link, Text } from \"@chakra-ui/react\";\nimport { json, LoaderFunction, useLoaderData } from \"react-router\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { format, addWeeks } from \"date-fns\";\nimport { getMenu, getSession, Menu as MenuRecord } from \"../db\";\nimport { getMenuDateFor } from \"../utils\";\nimport Menu from \"./Menu\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await getSession();\n\n  const url = new URL(request.url);\n  const isPreview = url.pathname.includes(\"preview\");\n  const menuDate = getMenuDateFor(\n    isPreview ? addWeeks(Date.now(), 1) : undefined\n  );\n  const menu = await getMenu(menuDate.toJSON());\n  return json({ menuDate, menu });\n};\n\nconst IndexPage: React.FC<{ preview?: boolean }> = ({ preview }) => {\n  const { menuDate, menu } = useLoaderData() as {\n    menuDate: string;\n    menu: PouchDB.Core.ExistingDocument<MenuRecord>;\n  };\n  const currentWeek = format(new Date(menuDate), \"MMM do\");\n\n  return (\n    <Box p=\"3\">\n      <Heading mt=\"0\" mb=\"4\">\n        Weekly Menu - {currentWeek}\n      </Heading>\n      <Menu menu={menu} />\n      <Text pb=\"4\">\n        {preview || (\n          <>\n            <Link color=\"teal.500\" as={RouterLink} to=\"/edit\" pr=\"3\">\n              Edit\n            </Link>\n            |\n            <Link color=\"teal.500\" as={RouterLink} to=\"/plan\" px=\"3\">\n              Plan next week\n            </Link>\n            |\n            <Link color=\"teal.500\" as={RouterLink} to=\"/preview\" pl=\"3\">\n              Preview next week\n            </Link>\n          </>\n        )}\n        {preview && (\n          <>\n            <Link color=\"teal.500\" as={RouterLink} to=\"/plan\" pr=\"3\">\n              Plan\n            </Link>\n            |\n            <Link color=\"teal.500\" as={RouterLink} to=\"/\" pl=\"3\">\n              Return\n            </Link>\n          </>\n        )}\n      </Text>\n    </Box>\n  );\n};\n\nexport default IndexPage;\n"],"names":["$k4ank","parcelRequire","$9354f69d464e3d4d$export$f4c5de44377d2946","async","request","$fiQoM","getSession","isPreview","URL","url","pathname","includes","menuDate","$8Xs7T","getMenuDateFor","$80TUu","addWeeks","Date","now","undefined","menu","getMenu","toJSON","$3T949","json","$9354f69d464e3d4d$export$2e2bcd8739ae039","preview","useLoaderData","currentWeek","format","jsxs","$1idYv","Box","p","Heading","mt","mb","jsx","$hXCME","default","Text","pb","Fragment","Link","color","as","$fIsAN","to","pr","px","pl"],"version":3,"file":"IndexPage.6b6a180b.js.map"}